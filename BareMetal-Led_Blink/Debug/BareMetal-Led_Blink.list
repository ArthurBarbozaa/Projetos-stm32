
BareMetal-Led_Blink.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001c4  08000130  08000130  00001130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002f4  080002fc  000012fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002f4  080002f4  000012fc  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080002f4  080002f4  000012fc  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080002f4  080002fc  000012fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002f4  080002f4  000012f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080002f8  080002f8  000012f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000012fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080002fc  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080002fc  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000012fc  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000011d  00000000  00000000  00001325  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000bf  00000000  00000000  00001442  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000050  00000000  00000000  00001508  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000033  00000000  00000000  00001558  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000fbe  00000000  00000000  0000158b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000441  00000000  00000000  00002549  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003dd6  00000000  00000000  0000298a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00006760  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000080  00000000  00000000  000067a4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000068  00000000  00000000  00006824  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	080002dc 	.word	0x080002dc

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	080002dc 	.word	0x080002dc

08000170 <delay>:
#define APB2ENR_IOPAEN (1 << 2)
//set 1 no bit 3 (GPIOB)
#define APB2ENR_IOPBEN (1 << 3)

void delay(uint32_t delay)
{
 8000170:	b480      	push	{r7}
 8000172:	b085      	sub	sp, #20
 8000174:	af00      	add	r7, sp, #0
 8000176:	6078      	str	r0, [r7, #4]
	for(int i = 0; i < delay; i++)
 8000178:	2300      	movs	r3, #0
 800017a:	60fb      	str	r3, [r7, #12]
 800017c:	e00c      	b.n	8000198 <delay+0x28>
		for(int j = 0; j < delay; j++);
 800017e:	2300      	movs	r3, #0
 8000180:	60bb      	str	r3, [r7, #8]
 8000182:	e002      	b.n	800018a <delay+0x1a>
 8000184:	68bb      	ldr	r3, [r7, #8]
 8000186:	3301      	adds	r3, #1
 8000188:	60bb      	str	r3, [r7, #8]
 800018a:	68bb      	ldr	r3, [r7, #8]
 800018c:	687a      	ldr	r2, [r7, #4]
 800018e:	429a      	cmp	r2, r3
 8000190:	d8f8      	bhi.n	8000184 <delay+0x14>
	for(int i = 0; i < delay; i++)
 8000192:	68fb      	ldr	r3, [r7, #12]
 8000194:	3301      	adds	r3, #1
 8000196:	60fb      	str	r3, [r7, #12]
 8000198:	68fb      	ldr	r3, [r7, #12]
 800019a:	687a      	ldr	r2, [r7, #4]
 800019c:	429a      	cmp	r2, r3
 800019e:	d8ee      	bhi.n	800017e <delay+0xe>
}
 80001a0:	bf00      	nop
 80001a2:	bf00      	nop
 80001a4:	3714      	adds	r7, #20
 80001a6:	46bd      	mov	sp, r7
 80001a8:	bc80      	pop	{r7}
 80001aa:	4770      	bx	lr

080001ac <main>:

int main(void)
{
 80001ac:	b580      	push	{r7, lr}
 80001ae:	af00      	add	r7, sp, #0
	//Habilita clock para GPIOA e GPIOB
    RCC_APB2ENR |= APB2ENR_IOPAEN;
 80001b0:	4b1e      	ldr	r3, [pc, #120]	@ (800022c <main+0x80>)
 80001b2:	681b      	ldr	r3, [r3, #0]
 80001b4:	4a1d      	ldr	r2, [pc, #116]	@ (800022c <main+0x80>)
 80001b6:	f043 0304 	orr.w	r3, r3, #4
 80001ba:	6013      	str	r3, [r2, #0]
    RCC_APB2ENR |= APB2ENR_IOPBEN;
 80001bc:	4b1b      	ldr	r3, [pc, #108]	@ (800022c <main+0x80>)
 80001be:	681b      	ldr	r3, [r3, #0]
 80001c0:	4a1a      	ldr	r2, [pc, #104]	@ (800022c <main+0x80>)
 80001c2:	f043 0308 	orr.w	r3, r3, #8
 80001c6:	6013      	str	r3, [r2, #0]

    //PA8 -> bits 3,2,1,0
    GPIOA_CRH &= ~(0xF << 0);//limpa os bits
 80001c8:	4b19      	ldr	r3, [pc, #100]	@ (8000230 <main+0x84>)
 80001ca:	681b      	ldr	r3, [r3, #0]
 80001cc:	4a18      	ldr	r2, [pc, #96]	@ (8000230 <main+0x84>)
 80001ce:	f023 030f 	bic.w	r3, r3, #15
 80001d2:	6013      	str	r3, [r2, #0]
    GPIOA_CRH |= (0x1 << 0); //set 1 no bit 1 MODE(10 MHz), CNF 00 (output pp)
 80001d4:	4b16      	ldr	r3, [pc, #88]	@ (8000230 <main+0x84>)
 80001d6:	681b      	ldr	r3, [r3, #0]
 80001d8:	4a15      	ldr	r2, [pc, #84]	@ (8000230 <main+0x84>)
 80001da:	f043 0301 	orr.w	r3, r3, #1
 80001de:	6013      	str	r3, [r2, #0]

    //PB12 -> bits 19,18,17,16
    GPIOB_CRH &= ~(0xF << 16); //limpa os bits
 80001e0:	4b14      	ldr	r3, [pc, #80]	@ (8000234 <main+0x88>)
 80001e2:	681b      	ldr	r3, [r3, #0]
 80001e4:	4a13      	ldr	r2, [pc, #76]	@ (8000234 <main+0x88>)
 80001e6:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
 80001ea:	6013      	str	r3, [r2, #0]
    GPIOB_CRH |= (0x1 << 16); ////set 1 no bit 16 MODE(10 MHz), CNF 00 (output pp)
 80001ec:	4b11      	ldr	r3, [pc, #68]	@ (8000234 <main+0x88>)
 80001ee:	681b      	ldr	r3, [r3, #0]
 80001f0:	4a10      	ldr	r2, [pc, #64]	@ (8000234 <main+0x88>)
 80001f2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80001f6:	6013      	str	r3, [r2, #0]


	for(;;){
		GPIOA_BSRR = (1 << 8); //set 1 bit 8 -> liga o led PA8
 80001f8:	4b0f      	ldr	r3, [pc, #60]	@ (8000238 <main+0x8c>)
 80001fa:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80001fe:	601a      	str	r2, [r3, #0]
		delay(1000);
 8000200:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8000204:	f7ff ffb4 	bl	8000170 <delay>
		GPIOA_BSRR = (1 << (8 + 16)); //set 1 bit 24 -> desliga o led PA8
 8000208:	4b0b      	ldr	r3, [pc, #44]	@ (8000238 <main+0x8c>)
 800020a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800020e:	601a      	str	r2, [r3, #0]
		GPIOB_BSRR = (1 << 12); //set 1 bit 12 -> liga o led PB12
 8000210:	4b0a      	ldr	r3, [pc, #40]	@ (800023c <main+0x90>)
 8000212:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8000216:	601a      	str	r2, [r3, #0]
		delay(1000);
 8000218:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 800021c:	f7ff ffa8 	bl	8000170 <delay>
		GPIOB_BSRR = (1 << (12 + 16)); //set 1 bit 28 -> desliga o led PB12
 8000220:	4b06      	ldr	r3, [pc, #24]	@ (800023c <main+0x90>)
 8000222:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8000226:	601a      	str	r2, [r3, #0]
		GPIOA_BSRR = (1 << 8); //set 1 bit 8 -> liga o led PA8
 8000228:	bf00      	nop
 800022a:	e7e5      	b.n	80001f8 <main+0x4c>
 800022c:	40021018 	.word	0x40021018
 8000230:	40010804 	.word	0x40010804
 8000234:	40010c04 	.word	0x40010c04
 8000238:	40010810 	.word	0x40010810
 800023c:	40010c10 	.word	0x40010c10

08000240 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000240:	480d      	ldr	r0, [pc, #52]	@ (8000278 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000242:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000244:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000248:	480c      	ldr	r0, [pc, #48]	@ (800027c <LoopForever+0x6>)
  ldr r1, =_edata
 800024a:	490d      	ldr	r1, [pc, #52]	@ (8000280 <LoopForever+0xa>)
  ldr r2, =_sidata
 800024c:	4a0d      	ldr	r2, [pc, #52]	@ (8000284 <LoopForever+0xe>)
  movs r3, #0
 800024e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000250:	e002      	b.n	8000258 <LoopCopyDataInit>

08000252 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000252:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000254:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000256:	3304      	adds	r3, #4

08000258 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000258:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800025a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800025c:	d3f9      	bcc.n	8000252 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800025e:	4a0a      	ldr	r2, [pc, #40]	@ (8000288 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000260:	4c0a      	ldr	r4, [pc, #40]	@ (800028c <LoopForever+0x16>)
  movs r3, #0
 8000262:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000264:	e001      	b.n	800026a <LoopFillZerobss>

08000266 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000266:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000268:	3204      	adds	r2, #4

0800026a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800026a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800026c:	d3fb      	bcc.n	8000266 <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 800026e:	f000 f811 	bl	8000294 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 8000272:	f7ff ff9b 	bl	80001ac <main>

08000276 <LoopForever>:

LoopForever:
  b LoopForever
 8000276:	e7fe      	b.n	8000276 <LoopForever>
  ldr   r0, =_estack
 8000278:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 800027c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000280:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000284:	080002fc 	.word	0x080002fc
  ldr r2, =_sbss
 8000288:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800028c:	2000001c 	.word	0x2000001c

08000290 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000290:	e7fe      	b.n	8000290 <ADC1_2_IRQHandler>
	...

08000294 <__libc_init_array>:
 8000294:	b570      	push	{r4, r5, r6, lr}
 8000296:	2600      	movs	r6, #0
 8000298:	4d0c      	ldr	r5, [pc, #48]	@ (80002cc <__libc_init_array+0x38>)
 800029a:	4c0d      	ldr	r4, [pc, #52]	@ (80002d0 <__libc_init_array+0x3c>)
 800029c:	1b64      	subs	r4, r4, r5
 800029e:	10a4      	asrs	r4, r4, #2
 80002a0:	42a6      	cmp	r6, r4
 80002a2:	d109      	bne.n	80002b8 <__libc_init_array+0x24>
 80002a4:	f000 f81a 	bl	80002dc <_init>
 80002a8:	2600      	movs	r6, #0
 80002aa:	4d0a      	ldr	r5, [pc, #40]	@ (80002d4 <__libc_init_array+0x40>)
 80002ac:	4c0a      	ldr	r4, [pc, #40]	@ (80002d8 <__libc_init_array+0x44>)
 80002ae:	1b64      	subs	r4, r4, r5
 80002b0:	10a4      	asrs	r4, r4, #2
 80002b2:	42a6      	cmp	r6, r4
 80002b4:	d105      	bne.n	80002c2 <__libc_init_array+0x2e>
 80002b6:	bd70      	pop	{r4, r5, r6, pc}
 80002b8:	f855 3b04 	ldr.w	r3, [r5], #4
 80002bc:	4798      	blx	r3
 80002be:	3601      	adds	r6, #1
 80002c0:	e7ee      	b.n	80002a0 <__libc_init_array+0xc>
 80002c2:	f855 3b04 	ldr.w	r3, [r5], #4
 80002c6:	4798      	blx	r3
 80002c8:	3601      	adds	r6, #1
 80002ca:	e7f2      	b.n	80002b2 <__libc_init_array+0x1e>
 80002cc:	080002f4 	.word	0x080002f4
 80002d0:	080002f4 	.word	0x080002f4
 80002d4:	080002f4 	.word	0x080002f4
 80002d8:	080002f8 	.word	0x080002f8

080002dc <_init>:
 80002dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002de:	bf00      	nop
 80002e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002e2:	bc08      	pop	{r3}
 80002e4:	469e      	mov	lr, r3
 80002e6:	4770      	bx	lr

080002e8 <_fini>:
 80002e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002ea:	bf00      	nop
 80002ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002ee:	bc08      	pop	{r3}
 80002f0:	469e      	mov	lr, r3
 80002f2:	4770      	bx	lr
